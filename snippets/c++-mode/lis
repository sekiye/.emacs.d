# -*- mode: snippet -*-
# name: lis
# key: lis
# --
static const int INF = std::numeric_limits<int>::max() / 3;
static const int MAX_N = 100000;  // TODO

int dp[MAX_N];

// Longest Increasing Subsequence O(n log n)
int lis(const vector<int> &a) {
  int n = a.size();
  fill(dp, dp + n, INF);
  for (int i = 0; i < n; i++) {
    *lower_bound(dp, dp + n, a[i]) = a[i];
  }
  return lower_bound(dp, dp + n, INF) - dp;
}
